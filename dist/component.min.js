!function(e,t){"function"==typeof define&&define.amd?define(["cargo.Model","cargo.Translation","virtualDom","html2hscript","Handlebars","superagent"],t):"object"==typeof exports?module.exports=t(require("cargo.Model"),require("cargo.Translation"),require("virtualDom"),require("html2hscript"),require("Handlebars"),require("superagent")):(e.cargo=e.cargo||{},e.cargo.Component=t(e.cargo.Model,e.cargo.Translation,e.virtualDom,e.html2hscript,e.Handlebars,e.superagent))}(this,function(Model,Translation,virtualDom,html2hscript,Handlebars,superagent){var Component=function(e,t){"use strict";function r(e,t,r){return c?new Promise(function(e){var r={};r.template=t.compile(c.template),r.handlebars=t;var o=["attach","update","detach"];_.each(o,function(e){r[e]=c[e]}),e(r)}):new Promise(function(a,n){superagent.get(e).end(function(i,s){if(i)return void n(new Error("Unable to load template from '"+e+"': "+i));var l;try{var h=new DOMParser,d=h.parseFromString(s.text,"text/html");if(l=o(d).find("template").first(),!l||!l.length)return void n(new Error("Template '"+e+"' does not contain a <template> element in body."));c={},c.template=l.html().trim(),l=t.compile(c.template)}catch(u){return void n(new Error("Unable to compile rendering function from template '"+e+"': "+u))}var m={};m.template=l,m.handlebars=t;for(var p=["attach","update","detach"],f=0;f<p.length;f++){var g=p[f];try{var v=o(d).find("script."+g).first();if(v.length>0){var w=v.text();c[g]=m[g]=new Function("node",w)}else c[g]=m[g]=r[g]}catch(u){return void n(new Error("Unable to install '"+g+"' function from template '"+e+"': "+u))}}a(m)})})}if(!Promise)throw new Error("Promise API is required.");if(!Model)throw new Error("cargo.Model API is required.");if(!Translation)throw new Error("cargo.Translation API is required.");if(!virtualDom)throw new Error("Virtual DOM required. (https://github.com/Matt-Esch/virtual-dom)");if(!html2hscript)throw new Error("Module html2hscript required.");if(!superagent)throw new Error("superagent is required. (https://github.com/visionmedia/superagent)");if(!Handlebars)throw new Error("Handlebars is required. (https://github.com/wycats/handlebars.js/)");if(!_)throw new Error("underscore is required. (https://github.com/jashkenas/underscore)");var o=window.$;t=t||{};var a=t.handlebars||Handlebars,n=t.attach||function(){},i=t.update||function(){},s=t.detach||function(){},c=void 0;return this.attach=function(t){if(!t)return Promise.reject(new Error("Need a jquery selector as first argument to attach()."));var c=o(t),l={};if(!c||0==c.length)return Promise.reject(new Error("Selector "+t+" does not select any actual DOM nodes."));try{c.each(function(e,r){var a=o(r),n=a.attr("x-cargo-id");if(n)throw new Error("Node "+r.toString()+" selected by "+t+" has already been attached to a component.");var i=_.uniqueId();a.attr("x-cargo-id",i),l[i]=r})}catch(h){return Promise.reject(h)}if(a.templates&&a.templates[e]){var d=new Renderer(t,l,a.templates[e],n,i,s);return Promise.resolve(d)}var u={attach:n,update:i,detach:s};return r(e,a,u).then(function(e){var r=new Renderer(t,l,e.template,e.attach,e.update,e.detach);return Promise.resolve(r)})},this};Component.prototype.constructor=Component;var Renderer=function(selector,originalNodes,template,attach,update,detach){var h=virtualDom.h,target=$(),tree=void 0;this.detach=function(){_.each(originalNodes,function(e,t){e.removeAttribute("x-cargo-id"),target&&target.length&&target.each(function(){if(this.getAttribute("x-cargo-id")===t){try{detach&&detach(this)}catch(r){}$(this).replaceWith(e)}})}),originalNodes={},target=$(),tree=void 0},this.render=function(state){if(state=Model.state(state),void 0===state)return Promise.resolve(state);if(state instanceof Error)return Promise.reject(state);if(!selector||!_.keys(originalNodes).length)return Promise.resolve(state);this.state=state.toJS();var html=template(this.state);if(!html)return Promise.resolve(state);var newTree=void 0;return html2hscript(html,function(err,hscript){newTree=eval(hscript),err&&console.log("Rendering error: "+err)}),newTree||console.log("Rendering did not return a result."),void 0===tree?_.each(originalNodes,function(e,t){var r=virtualDom.create(newTree),o=$(e);try{var a=o.prop("id");a&&(r.id=a),r.setAttribute("x-cargo-id",t),o.replaceWith(r),attach.call(this,r),target=target.add(r)}catch(n){console.log("Error while calling attach() on component with selector: "+selector+": "+n)}try{update.call(this,r)}catch(n){console.log("Error while calling update() on component with selector: "+selector+": "+n)}},this):target.each(function(){var e=virtualDom.diff(tree,newTree);virtualDom.patch(this,e);try{update.call(this)}catch(t){console.log("Error while calling update() on component with selector: "+selector+": "+t)}}),tree=newTree,Promise.resolve(state)},this.refresh=function(){return this.render(this.state)}};return Renderer.prototype.constructor=Renderer,Component.Renderer=Renderer,Component});