!function(e,r){"function"==typeof define&&define.amd?define(["Handlebars","morphdom","superagent","underscore"],r):"object"==typeof exports?module.exports=r(require("Handlebars"),require("morphdom"),require("superagent"),require("underscore")):(e.cargo=e.cargo||{},e.cargo.Component=r(e.Handlebars,e.morphdom,e.superagent,e.underscore))}(this,function(e,r,t,o){var n=function(e){"use strict";if(!Promise)throw new Error("Promise API is required.");if(!r)throw new Error("morphdom is required. (https://github.com/patrick-steele-idem/morphdom)");var t=window.$;e=e||{};var n=e.renderState||function(e){return"<pre>"+JSON.stringify(e,void 0," ")+"</pre>"},c=e.onAttach||function(){},a=e.onUpdate||function(){},s=e.onDetach||function(){};return this.attach=function(e){if(!e)throw new Error("Need a jquery selector as first argument to attach().");var r=t(e),h={};if(!r||0==r.length)throw new Error("Selector "+e+" does not select any actual DOM nodes.");return r.each(function(r,n){var i=t(n),c=i.attr("x-cargo-id");if(c)throw new Error("Node "+n.toString()+" selected by "+e+" has already been attached to a component.");var a=o.uniqueId();i.attr("x-cargo-id",a),h[a]=n}),new i(e,h,n,c,a,s)},this};n.prototype.constructor=n;var i=function(e,t,n,i,c,a){var s=$(),h=!0;this.detach=function(){o.each(t,function(e,r){e.removeAttribute("x-cargo-id"),s&&s.length&&s.each(function(){if(this.getAttribute("x-cargo-id")===r){try{a&&a(this)}catch(t){}$(this).replaceWith(e)}})}),t={},s=$(),h=!0},this.render=function(a){if(void 0===a)return Promise.resolve(a);if(a instanceof Error)return Promise.reject(a);if(!e||!o.keys(t).length)return Promise.resolve(a);a.toJS&&"function"==typeof a.toJS&&(a=a.toJS());var u=n(a);return u?(h?(h=!1,o.each(t,function(r,t){var o=$.parseHTML(u);if(o&&o.length){var n=o[0],a=$(r);try{var h=a.prop("id");h&&(n.id=h),n.setAttribute("x-cargo-id",t),a.replaceWith(n),i.call(this,n),s=s.add(n)}catch(d){console.log("Error while calling attach() on component with selector: "+e+": "+d)}try{c.call(this,n)}catch(d){console.log("Error while calling update() on component with selector: "+e+": "+d)}}},this)):s.each(function(){var t=this.id,o=this.getAttribute("x-cargo-id");r(this,u),this.id=t,this.setAttribute("x-cargo-id",o);try{c.call(this)}catch(n){console.log("Error while calling update() on component with selector: "+e+": "+n)}}),Promise.resolve(a)):Promise.resolve(a)}};return i.prototype.constructor=i,n.Renderer=i,n});